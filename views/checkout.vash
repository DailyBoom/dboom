@html.extend("layout", function(model) {
	@html.block("body", function(model) {
		<div class="container">
			<div class="row blue-grey-text text-lighten-2 center">
				<br>
				<div class="col s4">
					<h5 class="sm">
						<i class="fa fa-truck fa-2x fa-fw"></i>
						<br class="hide-on-med-and-up">1. @model.__('shipping')
					</h5>
				</div>
				<div class="col s4 blink">
					<h5 class="green-text text-darken-3 sm">
						<i class="fa fa-credit-card fa-2x fa-fw green-text text-darken-3"></i>
						<br class="hide-on-med-and-up">2. @model.__('payment')
					</h5>
				</div>
				<div class="col s4">
					<h5 class="sm">
						<i class="fa fa-thumbs-o-up fa-2x fa-fw"></i>
						<br class="hide-on-med-and-up">3. @model.__('confirm')
					</h5>
				</div>
			</div><!-- .row -->
			<div class="row">
				<div class="col s12">
					<!-- <h3 class="blue-grey-text text-darken-4">주문결제</h3> -->
					<br>
				</div>
				<div class="col s12 m6 l8">
					<div class="col s12 blue-grey-text text-darken-3">
						<h5>옵션 및 수량 선택</h5>
						<form method="post" id="options">
							<div class="input-field col s12 m8 l9">
								<select id="order_option" name="order_option">
									@{ var i = 0; }
									@model.order.product.options.forEach(function(option) {
										@if(parseInt(option.quantity) > 0) {
											<option value="@option.name" @(model.order.option == option.name ? 'selected' : '')>@option.name</option>
											@{ i++; }
										}
										else {
											<option value="@option.name" disabled>@option.name (Sold Out)</option>
										}
									})
								</select>
							</div>
							<div class="input-field col s12 m4 l3">
								<select id="order_quantity" name="order_quantity">
									@for(i = 1; i <= parseInt(model.leftQuantity) && i <= 10 ; i++) {
										<option value="@i" @(model.order.quantity == i ? 'selected' : '') >@i</option>
									}
								</select>
							</div>
							@if(model.coupons && model.coupons.length > 0) {
								<div class="input-field col s12">
									<select id="coupon" name="coupon">
										<option value="">쿠폰 선택</option>
										@model.coupons.forEach(function(coupon) {
											@if(coupon.type == 1 && model.order.product.delivery_price > 0) {
												<option value="@coupon.id" @(model.order.coupon && model.order.coupon.id == coupon.id ? 'selected' : '') >무료 배송 (유효기간: @model.moment(coupon.expires_at).format("YYYY/MM/DD"))</option>
											}
											else if (coupon.type == 2) {
												<option value="@coupon.id" @(model.order.coupon && model.order.coupon.id == coupon.id ? 'selected' : '') >@coupon.price 원 (유효기간: @model.moment(coupon.expires_at).format("YYYY/MM/DD"))</option>
											}
											else if (coupon.type == 3) {
												<option value="@coupon.id" @(model.order.coupon && model.order.coupon.id == coupon.id ? 'selected' : '') >@coupon.percentage% (유효기간: @model.moment(coupon.expires_at).format("YYYY/MM/DD"))</option>
											}
										})
									</select>
								</div>
							}
							@if (model.user && model.user.wallet > 0) {
								<div class="input-field col s12 m7 @(model.is_mobile ? '': 'right')'">
									<label for="wallet_dc">자연 Point @model.user.wallet 원</label>
									<input type="number" id="wallet_dc" max="@model.user.wallet" min="0" name="wallet_dc" class="col m7 s12" value="@model.order.wallet_dc"/>
									<button type="submit" class="btn col m5 s12">Point 사용</button>
								</div>
							}
							<input type="hidden" value="@model.order.product.id" />
						</form>
					</div><!-- .row -->
					<br>
					<div class="col s12 blue-grey-text text-darken-3">
					<hr>
						<h5>배송정보</h5>
						<span class="check-name">@(model.user ? model.user.shipping.full_name : model.order.shipping.full_name)</span>
						<br><span class="check-number">@(model.user? model.user.shipping.phone_number : model.order.shipping.phone_number)</span>
						<br><span class="check-address">@(model.user ? model.user.shipping.address : model.order.shipping.address)</span>
						<br><span class="check-address">(우)@(model.user ? model.user.shipping.zipcode : model.order.shipping.zipcode)</span>
						<br>
						<br><span class="check-address">대한민국</span>
						<div class="btn-shipping-edit">
							<a class="waves-effect waves-light btn blue-grey darken-2" href="/shipping">배송정보 수정</a>
						</div>
								<!-- Comments -->
						<div class="row">
							<form class="col s12" action="" id="new_comment">
										<hr>
										<br>
							<div class="row blue-grey-text text-darken-2">
								<div class="col s12 m6 l8">
								<!-- <h5>고객요청 사항</h5> -->
								<h5>고객문의 사항</h5>
								</div>
								<div class="input-field col s12 m6 l8 hide">
									<select id="request_select" name="request_select">
										<option value="" disabled selected>배송시 요청사항을 선택해 주세요.</option>
										<option value="1">배송전 연락바랍니다.</option>
										<option value="2">경비실에 맡겨주시기 바랍니다.</option>
										<option value="3">택배함에 놔주세요.</option>
										<option value="4">집앞에 놔주세요.</option>
										<option value="5">직접입력...</option>
									</select>
								</div>
								<div class="input-field col s12 m6 l8">
								<textarea id="comment_body" class="materialize-textarea" name="comment_body" required></textarea>
								<label for="comment_body">예) 상품 구매가 진행되지 않습니다, Payco 결제 시스템 추천합니다 등</label>
								</div>
							</div>
							<button type="submit" class="waves-effect waves-light btn blue-grey darken-3">메세지 보내기 <i class="fa fa-paper-plane fa-fw right"></i></button>
							</form>
						</div><!-- .row -->
						@if(!model.is_phone && model.getLocale() != 'vi') {
							<br><b style="font-size: 1.2em;">PAYCO 결제 순서</b>
							<ul class="payco-info">
								<li>우측 하단에 있는 <b>"PAYCO 구매하기"</b> 버튼을 클릭해주세요.</li>
								<li>주문정보내역 확인 후 구매하기 버튼 클릭 시 <b>'PAYCO'</b> 결제 인증창이 뜹니다.</li>
								<li><b>'PAYCO'</b> 결제 인증창에서 정보를 입력하신 후 결제해주세요.</li>
							</ul>
						}
					</div><!-- .row -->
				</div><!-- .col -->
				<div class="col s12 m6 l4">
					<div class="blue-grey-text text-darken-3">
						<h5 class="summary-title">상품정보</h5>
						<div class="summary-box white z-depth-1 right center-align">
							<img class="responsive-img" src="@model.order.product.images[0]" alt="" />
							<div class="check-price-box center">
								<span class="check-item-name blue-grey-text text-darken-1 truncate"><b>@model.order.product.brand</b></span>
								<span class="check-item-name blue-grey-text text-darken-2 truncate">@model.order.option</span>
								@if (model.order.product.delivery_price <= 0 || (model.order.coupon && model.order.coupon.type == 1)) {
								     <span class="check-item-name blue-grey-text text-darken-2">무료 배송</span><br>
								}
								else if (model.order.product.delivery_price > 0){
								    <span class="check-item-name blue-grey-text text-darken-2">+ <span id="delivery_price">@model.order.product.delivery_price</span> 배송비</span><br>
								}
								<!-- wallet -->
								@if (model.order.wallet_dc) {
								     <span class="check-item-name blue-grey-text text-darken-2">Point 할인: @model.order.wallet_dc 원</span><br>									
								}
								<span class="check-price blue-grey-text text-darken-3" id="product_price">@model.order.totalOrderAmt</span>
							</div>
							<div class="bank-box">
								<a class="waves-effect waves-light btn btn-large btn-block green darken-2 modal-trigger" href="#bank_modal">Cash on delivery</a>
							</div>
						</div>
					</div><!-- .row -->
					@if(model.is_phone && model.getLocale() != 'vi') {
						<div class="payco-box-bottom">
							<b style="font-size: 1.2em;">PAYCO 결제 순서</b>
							<ol class="payco-info">
								<li>아래 하단에 있는 <b>"PAYCO 구매하기"</b> 버튼을 클릭해주세요.</li>
								<li>주문정보내역 확인 후 구매하기 버튼 클릭 시 <b>'PAYCO'</b> 결제 인증페이지로 이동됩니다.</li>
								<li><b>'PAYCO'</b> 결제 인증창에서 정보를 입력하신 후 결제해주세요.</li>
							</ol>
						</div>
					}
				</div><!-- .col -->
			</div><!-- .row -->
		</div><!-- .container -->

		<br>
		<!-- Modal Structure -->
		<div id="bank_modal" class="modal">
			<div class="modal-content center">
				<i class="fa fa-times fa-fw right modal-close"></i>
				<h4>Cash on delivery</h4>
				<form action="/deposit_checkout" method="post">
					<div class="row">
						<div class="col s12 m8 offset-m2">
							<p class="bank-info blue-grey-text text-darken-1 center">
								By clicking the "confirm" button, you are confirming that you will have your payment ready upon item delivery.<br/>
								If you have any questions please call at 123-456-7890<br/>
								Thank you.
							</p>
						</div>
						<br>
						<br>
						<button type="submit" class="waves-effect waves-light btn green darken-2">Confirm</a>
					</div>
				</form>
			</div>
				<!-- .modal -->
		</div><!-- .container -->
		<script type="text/javascript" src="https://service.iamport.kr/js/iamport.payment-1.1.0.js"></script>
		<script type="text/javascript">
	    $(document).ready(function() {
	      $('select').material_select();
	      $('#order_request').characterCounter();
	    });
			$('#request_select').on('change', function() {
				if ($("#request_select option:selected").val() == 1) {
					$('#comment_body').html('배송전 연락바랍니다.');
					$('#comment_body').focus();
				}
				if ($("#request_select option:selected").val() == 2) {
					$('#comment_body').html('경비실에 맡겨주시기 바랍니다.');
					$('#comment_body').focus();
				}
				if ($("#request_select option:selected").val() == 3) {
					$('#comment_body').html('택배함에 놔주세요.');
					$('#comment_body').focus();
				}
				if ($("#request_select option:selected").val() == 4) {
					$('#comment_body').html('집앞에 놔주세요.');
					$('#comment_body').focus();
				}
				if ($("#request_select option:selected").val() == 5) {
					$('#comment_body').html('');
					$('#comment_body').focus();
				}
			});
			$(document).ready(function() {
				$('#new_comment').on("submit", function(event) {
					event.preventDefault();
					$.ajax({
						type: "POST",
						url: "/comments/new",
						dataType: "json",
						data: {
							body: $("#comment_body").val(),
							type: $("#request_select option:selected").val(),
							order: "@model.order.id"
						},
						success: function (res) {
							Materialize.toast(res.message, 4000);
							$('form textarea').val("");
						},
						error: function (res) {
							Materialize.toast(res.responseJSON.message, 4000);
						}
					});
				});

				$("#order_option, #order_quantity, #coupon").on('change', function() {
					if ($(this).find("option:selected").val() != 0)
						$("#options").submit();
				});
				// $('.modal-trigger').leanModal({
			    //   dismissible: true, // Modal can be dismissed by clicking outside of the modal
			    //   opacity: .5, // Opacity of modal background
			    //   in_duration: 300, // Transition in duration
			    //   out_duration: 200 // Transition out duration
			    // });
				$('select').material_select();
			});
			var lang = '@model.getLocale()';
			if (lang == 'vi')
				$("#product_price, #product_price_mobile, #delivery_price").formatCurrency({region: 'vi-VN', roundToDecimalPlace: 0});
			else
				$("#product_price, #product_price_mobile, #delivery_price").formatCurrency({region: 'ko-KR', roundToDecimalPlace: 0});			

			function order() {

				 // ==== 1. 선택 박스 필수 옵션을 체크 함 =====/

				//  if (document.getElementById('frm').option.value == "") {
				//      alert('옵션을 선택해주세요');
				//      return false;
				//  }

				//  if (document.getElementById('frm').buy_cnt.value == 0) {
				//      alert('구매수량을 선택해주세요');
				//      return false;
				//  }

				 /*
				   1. payco로 주문 정보를 등록 처리를 하는 가맹점 페이지로 이동
				   2. 해당 페이지에서 페이코 주문 예약 API를 이용하여 주문 정보를 등록
				   3. 리턴받은 주문서 페이지로 이동 처리한다.
				  */

				 // 성공 시 주문서 URL 팝업   ( 모바일의 경우 redirect )
				var orderurl = '@model.orderSheetUrl';
				var is_mobile = @model.is_mobile;
				if(!is_mobile){
					var popout = window.open(orderurl, 'popupPayco','top=100, left=300, width=727px, height=512px, resizable=no, scrollbars=yes');
					var pollTimer = window.setInterval(function() {
						if (popout.closed !== false) {
							window.clearInterval(pollTimer);
							if (window['code'] == 0) {
								window.location = '/success';
							}
							else {
								alert('Error in payment');
							}
						}
					}, 200);
				}
				else {
					window.location = orderurl;
				}
			}
			//<![CDATA[
			Payco.Button.register({
				SELLER_KEY : 'YJLGJG' ,
				ORDER_METHOD : "CHECKOUT",        // 주문유형 : CHECKOUT. 체크아웃 타입 / EASYPAY. 간편결제형
				BUTTON_TYPE : "C4",                 // 버튼타입 선택 (A1,A2)
				BUTTON_HANDLER : order,            // 구매하기 버튼 이벤트 Handler 함수 등록
				DISPLAY_PROMOTION : "Y",            // 이벤트 문구 출력 여부
				DISPLAY_ELEMENT_ID : "payco_btn_type_A1",  // 노출될 element id
				"" : ""
			});
			//]]>
			
			//IAMPORT
			var IMP = window.IMP;
			IMP.init('imp58343389'); // 'iamport' 대신 부여받은 "가맹점 식별코드"를 사용.
			$("#iamport_btn").on("click", function() {
				IMP.request_pay({
					pg : 'html5_inicis', // version 1.1.0부터 지원.
						/*
							'kakao':카카오페이,
							'inicis':이니시스, 'html5_inicis':이니시스(웹표준결제), 
							'nice':나이스, 
							'jtnet':jtnet, 
							'uplus':LG유플러스
						*/
					pay_method : 'card', // 'card':신용카드, 'trans':실시간계좌이체, 'vbank':가상계좌, 'phone':휴대폰소액결제
                    escrow : true,
					merchant_uid : 'merchant_' + '@model.order.id',
					name : '@model.order.product.name',
					amount : @model.order.totalOrderAmt,
					buyer_email : '@(model.user ? model.user.email : model.order.email)',
					buyer_name : '@(model.user ? model.user.shipping.full_name : model.order.shipping.full_name)',
					buyer_tel : '@(model.user ? model.user.shipping.phone_number : model.order.shipping.phone_number)',
					buyer_addr : '@(model.user ? model.user.shipping.address : model.order.shipping.address)',
					buyer_postcode : '@(model.user ? model.user.shipping.zipcode : model.order.shipping.zipcode)'
				}, function(rsp) {
					if ( rsp.success ) {
						$.ajax({
							type: "POST",
							url: "/iamport_callback",
							dataType: "json",
							data: {
								id: '@model.order.id',
								imp: JSON.stringify(rsp)
							},
							success: function (res) {
								window.location = '/success';
							},
							error: function (res) {
								Materialize.toast(res.responseJSON.message, 4000);
							}
						})
					} else {
						var msg = '결제에 실패하였습니다.';
						msg += '에러내용 : ' + rsp.error_msg;
						alert(msg);
					}
				});
			});
            $("#iamport_trans_btn").on("click", function() {
				IMP.request_pay({
					pg : 'html5_inicis', // version 1.1.0부터 지원.
						/*
							'kakao':카카오페이,
							'inicis':이니시스, 'html5_inicis':이니시스(웹표준결제), 
							'nice':나이스, 
							'jtnet':jtnet, 
							'uplus':LG유플러스
						*/
					pay_method : 'trans', // 'card':신용카드, 'trans':실시간계좌이체, 'vbank':가상계좌, 'phone':휴대폰소액결제
                    escrow : true,
					merchant_uid : 'merchant_' + '@model.order.id',
					name : '@model.order.product.name',
					amount : @model.order.totalOrderAmt,
					buyer_email : '@(model.user ? model.user.email : model.order.email)',
					buyer_name : '@(model.user ? model.user.shipping.full_name : model.order.shipping.full_name)',
					buyer_tel : '@(model.user ? model.user.shipping.phone_number : model.order.shipping.phone_number)',
					buyer_addr : '@(model.user ? model.user.shipping.address : model.order.shipping.address)',
					buyer_postcode : '@(model.user ? model.user.shipping.zipcode : model.order.shipping.zipcode)'
				}, function(rsp) {
					if ( rsp.success ) {
						$.ajax({
							type: "POST",
							url: "/iamport_callback",
							dataType: "json",
							data: {
								id: '@model.order.id',
								imp: JSON.stringify(rsp)
							},
							success: function (res) {
								window.location = '/success';
							},
							error: function (res) {
								Materialize.toast(res.responseJSON.message, 4000);
							}
						})
					} else {
						var msg = '결제에 실패하였습니다.';
						msg += '에러내용 : ' + rsp.error_msg;
						alert(msg);
					}
				});
			});
            $("#iamport_vbank_btn").on("click", function() {
				IMP.request_pay({
					pg : 'html5_inicis', // version 1.1.0부터 지원.
						/*
							'kakao':카카오페이,
							'inicis':이니시스, 'html5_inicis':이니시스(웹표준결제), 
							'nice':나이스, 
							'jtnet':jtnet, 
							'uplus':LG유플러스
						*/
					pay_method : 'vbank', // 'card':신용카드, 'trans':실시간계좌이체, 'vbank':가상계좌, 'phone':휴대폰소액결제
                    escrow : true,
					merchant_uid : 'merchant_' + '@model.order.id',
					name : '@model.order.product.name',
					amount : @model.order.totalOrderAmt,
					buyer_email : '@(model.user ? model.user.email : model.order.email)',
					buyer_name : '@(model.user ? model.user.shipping.full_name : model.order.shipping.full_name)',
					buyer_tel : '@(model.user ? model.user.shipping.phone_number : model.order.shipping.phone_number)',
					buyer_addr : '@(model.user ? model.user.shipping.address : model.order.shipping.address)',
					buyer_postcode : '@(model.user ? model.user.shipping.zipcode : model.order.shipping.zipcode)'
				}, function(rsp) {
					if ( rsp.success ) {
						$.ajax({
							type: "POST",
							url: "/iamport_callback",
							dataType: "json",
							data: {
								id: '@model.order.id',
								imp: JSON.stringify(rsp)
							},
							success: function (res) {
								$('#bank_modal').openModal();
							},
							error: function (res) {
								Materialize.toast(res.responseJSON.message, 4000);
							}
						})
					} else {
						var msg = '결제에 실패하였습니다.';
						msg += '에러내용 : ' + rsp.error_msg;
						alert(msg);
					}
				});
			});
            $("#iamport_danal_btn").on("click", function() {
				IMP.request_pay({
					pg : 'danal', // version 1.1.0부터 지원.
						/*
							'kakao':카카오페이,
							'inicis':이니시스, 'html5_inicis':이니시스(웹표준결제), 
							'nice':나이스, 
							'jtnet':jtnet, 
							'uplus':LG유플러스
						*/
					pay_method : 'card', // 'card':신용카드, 'trans':실시간계좌이체, 'vbank':가상계좌, 'phone':휴대폰소액결제
                    escrow : true,
					merchant_uid : 'merchant_' + '@model.order.id',
					name : '@model.order.product.name',
					amount : @model.order.totalOrderAmt,
					buyer_email : '@(model.user ? model.user.email : model.order.email)',
					buyer_name : '@(model.user ? model.user.shipping.full_name : model.order.shipping.full_name)',
					buyer_tel : '@(model.user ? model.user.shipping.phone_number : model.order.shipping.phone_number)',
					buyer_addr : '@(model.user ? model.user.shipping.address : model.order.shipping.address)',
					buyer_postcode : '@(model.user ? model.user.shipping.zipcode : model.order.shipping.zipcode)'
				}, function(rsp) {
					if ( rsp.success ) {
						$.ajax({
							type: "POST",
							url: "/iamport_callback",
							dataType: "json",
							data: {
								id: '@model.order.id',
								imp: JSON.stringify(rsp)
							},
							success: function (res) {
								window.location = '/success';
							},
							error: function (res) {
								Materialize.toast(res.responseJSON.message, 4000);
							}
						})
					} else {
						var msg = '결제에 실패하였습니다.';
						msg += '에러내용 : ' + rsp.error_msg;
						alert(msg);
					}
				});
			});
		</script>
	})
})
